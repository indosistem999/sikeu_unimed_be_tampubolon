{
  "success": {
    "auth": {
      "login": "Login success",
      "register": "Register a new account successfully",
      "refreshToken": "Refresh token successfully",
      "verifiedAccount": "Verified account successfully",
      "forgotPassword": "Send request forgot password success",
      "sendEmailResetPassword": "Reset password link sent to email",
      "resetPassword": "Reset password successfully",
      "userDetailInfo": "Get detail information success",
      "verifiedOTP": "The OTP code is correct. Now entry new password.",
      "changePassword": "Change password successfully"
    },
    "log": {
      "fetch": "Get user log activity successfully"
    },
    "masterModule": {
      "create": "New Master module added successfully",
      "fetchAll": "Get modules successfully",
      "findOne": "Get module successfully",
      "softDelete": "Master Module deleted successfully",
      "update": "Master Module edited successfully"
    },
    "masterIdentity": {
      "fetch": "Get master identity successfully",
      "store": "Master Identity added successfully",
      "update": "Master Identity edited successfully",
      "softDelete": "Master Identity deleted successfully"
    },
    "masterMenu": {
      "fetch": "Get master menu successfully",
      "storeMenu": "Master Menu added successfully",
      "storeSubMenu": "Add sub menu added successfully",
      "update": "Master Menu edited successfully",
      "softDelete": "Master Menu deleted successfully"
    },
    "workUnit": {
      "fetch": "Get work unit successfully",
      "store": "Work unit added successfully",
      "update": "Work unit edited successfully",
      "softDelete": "Work unit deleted successfully"
    },
    "user": {
      "fetch": "Get user successfully",
      "store": "User added successfully",
      "update": "User edited successfully",
      "softDelete": "User deleted successfully"
    },
    "role": {
      "findItem": "Get role {{item}} successfully",
      "fetch": "Get role successfully",
      "store": "User added successfully",
      "update": "User edited successfully",
      "softDelete": "User deleted successfully"
    },
    "roleModule": {
      "assigned": "Assigned module to role successfully",
      "softDelete": "Delete module and role from role module association successfully",
      "showModule": "Get modules successfully"
    },
    "accessMenu": {
      "assigned": "Assigned access menu to role successfully"
    },
    "budgetYear": {
      "findItem": "Get budget of year {{item}} successfully",
      "fetch": "Get budget of year successfully",
      "store": "Budget of year added successfully",
      "update": "Budget of year edited successfully",
      "softDelete": "Budget of year deleted successfully"
    },
    "sppdPangkat": {
      "findItem": "Get Sppd Pangkat {{item}} successfully",
      "fetch": "Get Sppd Pangkat successfully",
      "store": "Sppd Pangkat added successfully",
      "update": "Sppd Pangkat edited successfully",
      "softDelete": "Sppd Pangkat deleted successfully"
    },
    "sppdJenisTransportasi": {
      "findItem": "Get Sppd Jenis Transportasi {{item}} successfully",
      "fetch": "Get Sppd Jenis Transportasi successfully",
      "store": "Sppd Jenis Transportasi added successfully",
      "update": "Sppd Jenis Transportasi edited successfully",
      "softDelete": "Sppd Jenis Transportasi deleted successfully"
    },
    "sppdJenisBiaya": {
      "findItem": "Get Sppd Jenis Biaya {{item}} successfully",
      "fetch": "Get Sppd Jenis Biaya successfully",
      "store": "Sppd Jenis Biaya added successfully",
      "update": "Sppd Jenis Biaya edited successfully",
      "softDelete": "Sppd Jenis Biaya deleted successfully"
    },
    "jobCategory": {
      "findItem": "Get job category {{item}} successfully",
      "fetch": "Get job category successfully",
      "store": "Job category added successfully",
      "update": "Job category edited successfully",
      "softDelete": "Job category deleted successfully"
    },
    "sumberDana": {
      "findItem": "Get source of funds {{item}} successfully",
      "fetch": "Source of funds category successfully",
      "store": "Source of funds added successfully",
      "update": "Source of funds edited successfully",
      "softDelete": "Source of funds deleted successfully"
    },
    "sppdBagianSurat": {
      "findItem": "Get Bagian Surat {{item}} successfully",
      "fetch": "Get Bagian Surat successfully",
      "store": "Bagian Surat added successfully",
      "update": "Bagian Surat edited successfully",
      "softDelete": "Bagian Surat deleted successfully"
    },
    "sppdKopSurat": {
      "findItem": "Get Kop Surat {{item}} successfully",
      "fetch": "Get Kop Surat successfully",
      "store": "Kop Surat added successfully",
      "update": "Kop Surat edited successfully",
      "softDelete": "Kop Surat deleted successfully",
      "preview": "Preview Kop Surat successfully"
    },
    "masterOfficer": {
      "findItem": "Get officer {{item}} successfully",
      "fetch": "Get officer successfully",
      "store": "A new officer added successfully",
      "update": "Officer edited successfully",
      "softDelete": "Officer deleted successfully",
      "preview": "Preview officer successfully"
    },
    "sppdSuratTugas": {
      "findItem": "Get Surat Tugas {{item}} successfully",
      "fetch": "Get Surat Tugas successfully",
      "store": "Surat Tugas added successfully",
      "update": "Surat Tugas edited successfully",
      "softDelete": "Surat Tugas deleted successfully",
      "previewPegawai": "Preview Pegawai by Surat Tugas successfully"
    },
    "sppdPegawai": {
      "findItem": "Get employee {{item}} successfully",
      "fetch": "Get employee successfully",
      "store": "Employee added successfully",
      "update": "Employee edited successfully",
      "softDelete": "Employee deleted successfully"
    },
    "extractFile": {
      "read": "Read data file success",
      "waitImportIntegration": "Your data has been successfully read. Please check the import history to see the integration results."
    },
    "syncData": {
      "sppdPegawai": "Employee data synchronization request will be processed immediately. Please check the status of employee data synchronization results in the synchronization history"
    },
    "historyImportPegawai": {
      "fetch": "Get history row successfully"
    }
  },
  "error": {
    "default": {
      "internalServer": "Internal Server Error",
      "notFoundItem": "{{item}} not found",
      "notFound": "Data not found",
      "emptyData": "{{item}} is empty",
      "changePassword": "Password was changed. Please login again.",
      "emptyDataFile": "Empty your row data file"
    },
    "existed": {
      "slugItem": "{{item}} with {{slug}} already exists",
      "workUnit": "{{item}} already existed",
      "universal": "{{item}} already existed",
      "orderNumber": "Order number {{value}} already exists in the database.",
      "hasRegistered": "{{item}} already registered",
      "roleModule": "Data already existed. The Module had assigned to role",
      "sppdPangkat": "Data spd pangkat already existed",
      "sppdBagianSurat": "Bagian Surat already exists",
      "sppdKopSurat": "Kop Surat already exists"
    },
    "missing": {
      "tokenAuth": "Unauthorized: Token is missing",
      "requiredEntry": "{{label}} is required",
      "passwordMatch": "Confirm password must match password",
      "fileUpload": "Files are not uploaded or missing.",
      "requiredFile": "Field {{value}} is missing or required"
    },
    "failed": {
      "registerAccount": "Failed to register a new account",
      "resetPassword": "Failed to reset password",
      "verifyAccount": "Failed to verify account",
      "storeUserLog": "Failed to store user log",
      "storeIdentity": "Failed to store master identity",
      "storeMenu": "Failed to store menu",
      "storeWorkUnit": "Failed to store work unit",
      "storeUser": "Failed to store user",
      "storeRole": "Failed to store role",
      "assignRoleModule": "Assign role to module fail",
      "unassignedRoleModule": "Unassigned module to role",
      "featureList": "Your list feature are empty",
      "assignMenuAccess": "Menu access has been assigned to the role. Some processes may fail.",
      "storeSppdPangkat": "Failed to store spd pangkat",
      "storeSppdJenisTransportasi": "Failed to store spd jenis transportasi",
      "storeSppdJenisBiaya": "Failed to store spd jenis biaya",
      "storeBudgetYear": "Failed to store budget of year",
      "storeJobCategory": "Failed to store job category",
      "storeSumberDana": "Failed to store source of funds",
      "storeBagianSurat": "Failed to store bagian surat",
      "storeKopSurat": "Failed to store kop surat",
      "storeOfficer": "Failed to store officer",
      "uploadUndangan": "Failed to upload undangan file",
      "storeSuratTugas": "Failed to store surat tugas",
      "storeSPPD": "Failed to store SPPD",
      "updateSPPD": "Failed to update SPPD",
      "deleteSPPD": "Failed to delete SPPD",
      "previewSPPD": "Failed to preview SPPD details",
      "storeEmployee": "Failed to store employee",
      "readFileStream": "Failed to read your import {{type}} file",
      "loadFileStream": "Failed to load your {{type}} file",
      "storeHistory": "Failed to store data to history"
    },
    "invalid": {
      "emailEntry": "Invalid email entry",
      "emailFormatted": "Invalid email formatted",
      "password": "Invalid password entry",
      "tokenExpired": "Unauthorized: Invalid or expired token",
      "otpExpired": "The OTP code has expired. Please request again.",
      "bagianSuratId": "Invalid Bagian Surat ID",
      "kopSuratId": "Invalid Kop Surat ID",
      "enumValue": "Invalid {{label}}. Please fill the correct value"
    },
    "denied": {
      "tokenAccess": "Access denied. No token provided."
    },
    "other": {
      "passwordLength": "Password must be at least {{number}} characters long",
      "emailNotRegistered": "Email not registered"
    },
    "validation": {
      "bagianSurat": {
        "nameRequired": "Name must be a string",
        "descriptionString": "Description must be a string"
      },
      "kopSurat": {
        "orderNumber": "Order number must be a number",
        "description": "Description must be a string",
        "fontType": "Font type must be a string",
        "fontStyle": "Font style must be a string",
        "fontSize": "Font size must be a string"
      }
    },
    "notFound": {
      "sppdSuratTugas": "Surat Tugas not found"
    }
  }
}
